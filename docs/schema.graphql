type Query {
  entry(id: ID!): Entry
}

type Entry {
  id: ID!
  value: Table!
}

type Table {
  PRS: Screeve!
  IMPF: Screeve!
  PRSSUBJ: Screeve!
  FUT: Screeve!
  COND: Screeve!
  FUTSUBJ: Screeve!
  AOR: Screeve!
  AORIMPF: Screeve!
  OPT: Screeve!
  OPTIMPF: Screeve!
  PERF: Screeve!
  PERFIMPF: Screeve!
  PLUPERF: Screeve!
  PLUPERFIMPF: Screeve!
  PERFSUBJ: Screeve!
  PERFSUBJIMPF: Screeve!
  IMPAFF: Screeve!
  IMPAFFIMPF: Screeve!
  IMPPRB1: Screeve!
  IMPPRB1IMPF: Screeve!
  IMPPRB2: Screeve!
  INF: Screeve!
  INFIMPF: Screeve!  
}

type Screeve {
  S1: Form!
  S2: Form!
  S3: Form!
  P1: Form!
  P2: Form!
  P3: Form!
}

type Form {
  preverb: Component!
  person1: Component!
  version: Component!
  root: Component!
  thema: Component!
  person2: Component!
}

type Component {
  label: String!
  value: String
}